#!/usr/bin/env python3

#Import
from base64 import *
import sys
import os

#Functions
###########################################################

#Encode function
def Encode():
    Repeat = 1
    #User input and converting to "byte like object"
    EnInput = input('To be encoded: ')
    EnInput = EnInput.encode()
    #How many times to repeat
    EnRepeat = input('Encode how many times? ')
    EnRepeat = int(EnRepeat)

    while Repeat <= EnRepeat:

        #Encode the user input
        Encoded = standard_b64encode(EnInput)

        Repeat += 1

        EnInput = Encoded

    #Revert input to a string and print result
    Output = Encoded.decode()
    print(Output)

#Decode function
def Decode():
    Repeat = 1
    #User input and converting to "byte like object"
    DeInput = input("To be decoded: ")
    DeInput = bytes(DeInput, 'utf-8')

    #How many times to repeat
    DeRepeat = input("Decode how many times? ")
    DeRepeat = int(DeRepeat)

    #Decode the user input
    while Repeat <= DeRepeat:

        Decoded = standard_b64decode(DeInput)

        Repeat += 1

        DeInput = Decoded
    #Revert input into a string and print result
    Decoded = Decoded.decode()
    print(Decoded)

def FileEncode():
    File = input('Name of / Path to file: ')
    with open(File, 'r') as Opened:
        Contents = Opened.read()
    Writing = Contents.encode()
    Encoded = standard_b64encode(Writing)
    Output = Encoded.decode()
    with open(File, 'w+') as Outfile:
        Outfile.write(Output)

def FileDecode():
    File = input('Name of / Path to file: ')
    with open(File, 'r') as Opened:
        Contents = Opened.read()
    Writing = Contents.encode()
    Encoded = standard_b64decode(Writing)
    Output = Encoded.decode()
    with open (File, 'w+') as Outfile:
        Outfile.write(Output)

 ######################################################

#Selecting a Tool
if len(sys.argv) == 2:

    Input = sys.argv[1].lower()

#Running encode
    if Input == "encode" or Input == "e":
        Encode()

#Running decode
    elif Input == "decode" or Input == "d":
        Decode()
    
#Running help
    elif Input == "help" or Input == "h":
        print("Base64 Multitool by Fr3ki \n Encode: Convert text to base64 (-f File mode) \n Decode: Decode Base64 into plain text (-f File mode) \n --For more information check ReadMe.md-- ")


elif len(sys.argv) == 3:

    Input = sys.argv[1].lower()

#File encode
    if Input == "encode" and sys.argv[2].lower() == "-f" or Input == "e" and sys.argv[2].lower() == "-f":
        FileEncode()

#File decode
    elif EnDe.lower() == Input == "decode" and sys.argv[2] == "-f" or Input == "d" and sys.argv[2] == "-f":
        FileDecode()

#No input runs help
else:
    print("Base64 Multitool by Fr3ki \n Encode: Convert text to base64 (-f File mode) \n Decode: Decode Base64 into plain text (-f File mode) \n --For more information check ReadMe.md-- ")

